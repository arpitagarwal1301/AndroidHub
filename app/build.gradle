apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply from: '../android_commons.gradle'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {


    defaultConfig{
        applicationId Names.applicationId
        multiDexEnabled true
    }
    productFlavors {
        dev {
            applicationIdSuffix = '.dev'
        }
        uat {
            applicationIdSuffix = '.uat'
        }
    }

    buildTypes {

        release {
            debuggable false
            // default is false -> code shrinking , removes dead code but does not obfuscate or optimize whereas proguard do both
//            shrinkResources true
            //default is false -> resource shrinking , requires minifyEnabled true
            // Stops the reverse engineering of your application//
//            useProguard true //default true -> code obfuscater// instead use r8 enable true , false in gradle.properties
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled = true
        }

        debug {
            //if you set useProguard false in your app module's build.gradle file, the Android Gradle plugin uses R8 to shrink your app's code for that build type, regardless of whether you disable R8 in your project's gradle.properties file.
//            useProguard false // instead use r8 enable true , false in gradle.properties
            // default is true -> disables proguard obfuscation butttt....minifyEnable can still be set true,
            debuggable true
        }
    }



    dynamicFeatures = [Modules.dynamicfeature]

}


dependencies {

    api project(Modules.common)
    api project(Modules.geolocation)

    //Android
    api AndroidLibraries.appCompat
    implementation AndroidLibraries.constraintLayout
    implementation AndroidLibraries.recyclerview
    implementation AndroidLibraries.material
    implementation AndroidLibraries.play_core
    implementation AndroidLibraries.coreKtx
    //Third party
    implementation Libraries.timber
    implementation Libraries.glide
    implementation Libraries.firebase_core
    implementation Libraries.crashlytics
}

apply plugin: 'com.google.gms.google-services'


