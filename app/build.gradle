apply plugin: 'com.android.application'
// For supporting/other modules apply plugin: 'com.android.library'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {

    signingConfigs {

        release {
            keyAlias keystoreProperties['KEY_ALIAS']
            keyPassword keystoreProperties['KEY_PASSWORD']
            storeFile file(keystoreProperties['STORE_FILE'])
            storePassword keystoreProperties['STORE_PASSWORD']
        }

//        debug {
//            keyAlias keystoreProperties['KEY_ALIAS_DEBUG']
//            keyPassword keystoreProperties['KEY_PASSWORD_DEBUG']
//            storeFile file(keystoreProperties['STORE_FILE_DEBUG'])
//            storePassword keystoreProperties['STORE_PASSWORD_DEBUG']
//        }
    }

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.agarwal.arpit.androidhub"
        minSdkVersion 19
        targetSdkVersion 28 // match the compile one
        versionCode 1
        versionName versionProperty.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions("access")
    }


    productFlavors {
        live {
            // change the name of application according to variants of app //
            resValue "string", "app_name", "Android Hub_"+ versionProperty.versionName
        }
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 21
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Android Hub (Dev)_" + versionProperty.versionName
        }
        uat {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 21
            applicationIdSuffix ".uat"
            resValue "string", "app_name", "Android Hub (Uat)_" + versionProperty.versionName
        }
    }

    buildTypes {

        release {
            debuggable false
            minifyEnabled true
            // default is false -> code shrinking , removes dead code but does not obfuscate or optimize whereas proguard do both
            shrinkResources true
            //default is false -> resource shrinking , requires minifyEnabled true
            // Stops the reverse engineering of your application//
            useProguard true //default true -> code obfuscater
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfigs signingConfigs.release
        }

        debug {
            //if you set useProguard false in your app module's build.gradle file, the Android Gradle plugin uses R8 to shrink your app's code for that build type, regardless of whether you disable R8 in your project's gradle.properties file.
            useProguard false
            // default is true -> disables proguard obfuscation butttt....minifyEnable can still be set true,
            pseudoLocalesEnabled true // generate pseudo locale
            debuggable true
            //signingConfigs signingConfigs.debug
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //TODO :: create .apk with names containing flavour,builtType and version name .
}



dependencies {
    //tells the build system to include any
    //JAR files inside the app/libs/ directory in the compilation classpath and in the final package of
    //your app.
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    /* NEW DEPENDENCIES ADDED*/

    //RECYCLERVIEW
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    //Butterknife
    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'

}
